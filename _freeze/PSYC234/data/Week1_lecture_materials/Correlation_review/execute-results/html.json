{
  "hash": "3cbaa6fe70e2e6fd02b4e4d68a449e98",
  "result": {
    "markdown": "---\ntitle: \"Correlation_Review\"\noutput: html_document\n---\n\n\n\n\n## Introduction text within the R Markdown document\n\nThis is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.\n\nWhen you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document.\n\n### Read in the data\n\nThis is a reduced set of values retrieved from Margriet's first lecture in January 2021, where she demonstrated simple correlation.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd <- read_csv(\"Covariance_Data.csv\") # calling my dataframe d to save typing!\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 13 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (5): Participant_ID, Performance, IQ, Motivation, Social_Support\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n:::\n\n\n### Correlation review \n\nCorrelations are associations between a pair of variables. Two numerical variables are needed to compute a correlation.\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n Participant_ID  Performance          IQ          Motivation    Social_Support\n Min.   : 1     Min.   :65.00   Min.   : 84.0   Min.   :44.00   Min.   :50    \n 1st Qu.: 4     1st Qu.:74.00   1st Qu.:102.0   1st Qu.:60.00   1st Qu.:58    \n Median : 7     Median :76.00   Median :107.0   Median :62.00   Median :67    \n Mean   : 7     Mean   :77.62   Mean   :107.6   Mean   :66.23   Mean   :65    \n 3rd Qu.:10     3rd Qu.:84.00   3rd Qu.:111.0   3rd Qu.:68.00   3rd Qu.:73    \n Max.   :13     Max.   :90.00   Max.   :133.0   Max.   :93.00   Max.   :80    \n```\n:::\n:::\n\n\nAll variables are showing as numerical at this point  - we know this because the summary prints out min and max values.  This is of course wrong for the `Participant_ID` variable - but we aren't going to work with that variable in the following.\n\n#### Formulae for longhand calculations\n\nMargriet walked you through a calculation of variance and covariance to give you the values needed to compute a Pearson's *r* by hand:\nHere are the formulae again:\n\nVariance:\n\n$$\n\\frac{\\Sigma(X-\\bar{X})^2}{N-1}\n$$\nand of course, the standard deviation of a variable is the square root of variance:\n\n$$\n\\sqrt\\frac{\\Sigma(X-\\bar{X})^2}{N-1}\n$$\n\nCovariance:\n\n$$\n\\frac{\\Sigma(X-\\bar{X})(Y-\\bar{Y})}{N-1}\n$$\nAnd to compute a Pearson's r (a bivariate correlation of two numerical variables), we need the following formula:\n\nPearson's r:\n\n$$\nr = \\frac{covariance}{(sd_x)(sd_y)}\n$$\n#### Longhand calculations\n\nWe need two variables to complete an example:\n\nLets choose `Performance` and `IQ`.\n\nWe can use commands in the base R package to generate the values we need to compute the correlation long hand:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# mean values\nPerf_Av <- mean(d$Performance)\nIQ_Av <- mean(d$IQ)\n\n# variance values\nPerf_var <- var(d$Performance)\nIQ_var <- var(d$IQ)\n\n# standard deviation values\nPerf_sd <- sd(d$Performance)\nIQ_sd <- sd(d$IQ)\n```\n:::\n\n\nLets hard code our number of paired observations also:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nN <- nrow(d)\n```\n:::\n\n\nAll we need now is the covariance values.  Let's look at the formula once more:\n\n$$\n\\frac{\\Sigma(X-\\bar{X})(Y-\\bar{Y})}{N-1}\n$$\nLet *X* represent the `Performance` variable and *Y* represent the `IQ` variable.  The steps to calculate the top line of the fraction will then be:\n\n 1. subtract the mean of the Performance variable from every observation of Performance\n 2. subtract the mean of the IQ variable from every observation of IQ\n 3. multiply those paired values together\n 4. add those product values all together\n \nWe can perform each of those steps and add new columns to our `d` dataset as we go, so you can see what is happening along the way:\n \n\n::: {.cell}\n\n```{.r .cell-code}\n# new columns containing deviations of the observations from the variable mean\nd$P_dev <- d$Performance-Perf_Av # subtract the mean of the performance variable from every observation of performance\nd$IQ_dev <- d$IQ-IQ_Av # subtract the mean of the IQ variable from every observation of IQ\n\n# new column that multiplies P_dev and IQ_dev\nd$P_IQ <- d$P_dev*d$IQ_dev # multiply those paired values together\n\nP_IQ_sum <- sum(d$P_IQ) # add those product values all together\n```\n:::\n\n\nNow we have all the values we need to be able to compute (a) the covariance of the `performance` and `IQ` variables, and then Pearson's *r* for the strength and direction of the association between the two variables.\n\nTo compute the covariance, we simply divide our `P_IQ_sum` variable by `N-1`.  Note how I wrap the entire command in brackets which is a quicker way to ask R to print the output\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# compute the covariance\n(PIQ_cov <- P_IQ_sum/(N-1))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] -2.410256\n```\n:::\n:::\n\nSo the covariance is showing as -2.41 to 2.d.p.  Now we can compute Pearson's *r* using the formula (also shown above)\nPearson's r:\n\n$$\nr = \\frac{covariance}{(sd_x)(sd_y)}\n$$\nso we divide the `PIQ_cov` value by the product of `Perf_sd` and `IQ_sd`\n\n::: {.cell}\n\n```{.r .cell-code}\n(PIQ_r <- PIQ_cov/(Perf_sd*IQ_sd))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] -0.02408305\n```\n:::\n:::\n\nR base packages has functions to do this with one line:\n\ncalculate the covariance of `Performance` and `IQ` using the `cov()` function from base R\n\n\n::: {.cell}\n\n```{.r .cell-code}\n(PIQ_cov_base <- cov(d$Performance, d$IQ)) # as you can see it is the same as our longhand value PIQ_cov\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] -2.410256\n```\n:::\n:::\n\n\nand the correlation value using the `cor()` function from base R\n\n\n::: {.cell}\n\n```{.r .cell-code}\n(cor(d$Performance, d$IQ))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] -0.02408305\n```\n:::\n:::\n\nLets plot the values of `Performance` and `IQ` with that line that shows the correlation value\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(d$IQ, d$Performance) # call the plot using base package function of plot()\nabline(lm(d$Performance ~ d$IQ), col = \"blue\") # add the line using the `lm` function\n```\n\n::: {.cell-output-display}\n![](Correlation_review_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n#### Interpretation of the relationship\n\nOur research question here concerned the relationship between job performance and measures of IQ.  Our analysis does not show any relationship to speak of between the two variables.  Pearson's *r* for the association is -0.02,  a value extremely close to zero. If we were to interpret that value, we could say that there is an indication of a negative relationship - higher IQ values are associated with lower job performance, but the strength of the value is so low to zero, it is practically useless to say this.\n\nRemember that correlation is described by two dimensions:  Strength and Direction.  Direction is indicated by either a positive or negative sign to the value.  Posiitive relationships indicate and increase in X values in tandem with an increase in Y values; a negative relationship indicates an increase in X values in tandem with a decrease in Y values (or vice versa).  Strength of relationship is indicated by the value.  Pearson's *r* ranges from -1 to +1 with 0 indicating no relationship.  Values that are closer to the extreme values of -1 and +1 indicate stronger relationships, while values that move closer to 0 indicate a weakening of the relationship.\n\nJacob Cohen described and *r* of +/- 0.1 - 0.3 as small; +/- 0.31 - 0.5 as medium; +/- 0.51 - 0.7 as large and anything above that as very large.  As Margriet also noted, these are benchmarks,  sometimes referred to as \"T-shirt\" effect sizes, however they can be useful when you are beginning to think about relationships and effect sizes for practical uses.\n\n\n",
    "supporting": [
      "Correlation_review_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}